/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the Rating type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Rating{}

// Rating Rating of the instrument.
type Rating struct {
	// Funds Rating
	Morningstar *string `json:"morningstar,omitempty"`
	// Bonds Rating
	Moodys *string `json:"moodys,omitempty"`
}

// NewRating instantiates a new Rating object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRating() *Rating {
	this := Rating{}
	return &this
}

// NewRatingWithDefaults instantiates a new Rating object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatingWithDefaults() *Rating {
	this := Rating{}
	return &this
}

// GetMorningstar returns the Morningstar field value if set, zero value otherwise.
func (o *Rating) GetMorningstar() string {
	if o == nil || IsNil(o.Morningstar) {
		var ret string
		return ret
	}
	return *o.Morningstar
}

// GetMorningstarOk returns a tuple with the Morningstar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rating) GetMorningstarOk() (*string, bool) {
	if o == nil || IsNil(o.Morningstar) {
		return nil, false
	}
	return o.Morningstar, true
}

// HasMorningstar returns a boolean if a field has been set.
func (o *Rating) HasMorningstar() bool {
	if o != nil && !IsNil(o.Morningstar) {
		return true
	}

	return false
}

// SetMorningstar gets a reference to the given string and assigns it to the Morningstar field.
func (o *Rating) SetMorningstar(v string) {
	o.Morningstar = &v
}

// GetMoodys returns the Moodys field value if set, zero value otherwise.
func (o *Rating) GetMoodys() string {
	if o == nil || IsNil(o.Moodys) {
		var ret string
		return ret
	}
	return *o.Moodys
}

// GetMoodysOk returns a tuple with the Moodys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rating) GetMoodysOk() (*string, bool) {
	if o == nil || IsNil(o.Moodys) {
		return nil, false
	}
	return o.Moodys, true
}

// HasMoodys returns a boolean if a field has been set.
func (o *Rating) HasMoodys() bool {
	if o != nil && !IsNil(o.Moodys) {
		return true
	}

	return false
}

// SetMoodys gets a reference to the given string and assigns it to the Moodys field.
func (o *Rating) SetMoodys(v string) {
	o.Moodys = &v
}

func (o Rating) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Rating) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Morningstar) {
		toSerialize["morningstar"] = o.Morningstar
	}
	if !IsNil(o.Moodys) {
		toSerialize["moodys"] = o.Moodys
	}
	return toSerialize, nil
}

type NullableRating struct {
	value *Rating
	isSet bool
}

func (v NullableRating) Get() *Rating {
	return v.value
}

func (v *NullableRating) Set(val *Rating) {
	v.value = val
	v.isSet = true
}

func (v NullableRating) IsSet() bool {
	return v.isSet
}

func (v *NullableRating) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRating(val *Rating) *NullableRating {
	return &NullableRating{value: val, isSet: true}
}

func (v NullableRating) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRating) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


