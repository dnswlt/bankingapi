/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the DepotAggregation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepotAggregation{}

// DepotAggregation struct for DepotAggregation
type DepotAggregation struct {
	Depot *Depot `json:"depot,omitempty"`
	// Securities account Identifier (UUID)
	DepotId *string `json:"depotId,omitempty"`
	// Date of the last update of securities holdings & master data. YYYY-MM-DD
	DateLastUpdate *string `json:"dateLastUpdate,omitempty"`
	CurrentValue *AmountValue `json:"currentValue,omitempty"`
	PurchaseValue *AmountValue `json:"purchaseValue,omitempty"`
	PrevDayValue *AmountValue `json:"prevDayValue,omitempty"`
	LendingValue *AmountValue `json:"lendingValue,omitempty"`
	ProfitLossPurchaseAbs *AmountValue `json:"profitLossPurchaseAbs,omitempty"`
	ProfitLossPurchaseRel *PercentageString `json:"profitLossPurchaseRel,omitempty"`
	ProfitLossPrevDayAbs *AmountValue `json:"profitLossPrevDayAbs,omitempty"`
	ProfitLossPrevDayRel *PercentageString `json:"profitLossPrevDayRel,omitempty"`
}

// NewDepotAggregation instantiates a new DepotAggregation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepotAggregation() *DepotAggregation {
	this := DepotAggregation{}
	return &this
}

// NewDepotAggregationWithDefaults instantiates a new DepotAggregation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepotAggregationWithDefaults() *DepotAggregation {
	this := DepotAggregation{}
	return &this
}

// GetDepot returns the Depot field value if set, zero value otherwise.
func (o *DepotAggregation) GetDepot() Depot {
	if o == nil || IsNil(o.Depot) {
		var ret Depot
		return ret
	}
	return *o.Depot
}

// GetDepotOk returns a tuple with the Depot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetDepotOk() (*Depot, bool) {
	if o == nil || IsNil(o.Depot) {
		return nil, false
	}
	return o.Depot, true
}

// HasDepot returns a boolean if a field has been set.
func (o *DepotAggregation) HasDepot() bool {
	if o != nil && !IsNil(o.Depot) {
		return true
	}

	return false
}

// SetDepot gets a reference to the given Depot and assigns it to the Depot field.
func (o *DepotAggregation) SetDepot(v Depot) {
	o.Depot = &v
}

// GetDepotId returns the DepotId field value if set, zero value otherwise.
func (o *DepotAggregation) GetDepotId() string {
	if o == nil || IsNil(o.DepotId) {
		var ret string
		return ret
	}
	return *o.DepotId
}

// GetDepotIdOk returns a tuple with the DepotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetDepotIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepotId) {
		return nil, false
	}
	return o.DepotId, true
}

// HasDepotId returns a boolean if a field has been set.
func (o *DepotAggregation) HasDepotId() bool {
	if o != nil && !IsNil(o.DepotId) {
		return true
	}

	return false
}

// SetDepotId gets a reference to the given string and assigns it to the DepotId field.
func (o *DepotAggregation) SetDepotId(v string) {
	o.DepotId = &v
}

// GetDateLastUpdate returns the DateLastUpdate field value if set, zero value otherwise.
func (o *DepotAggregation) GetDateLastUpdate() string {
	if o == nil || IsNil(o.DateLastUpdate) {
		var ret string
		return ret
	}
	return *o.DateLastUpdate
}

// GetDateLastUpdateOk returns a tuple with the DateLastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetDateLastUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.DateLastUpdate) {
		return nil, false
	}
	return o.DateLastUpdate, true
}

// HasDateLastUpdate returns a boolean if a field has been set.
func (o *DepotAggregation) HasDateLastUpdate() bool {
	if o != nil && !IsNil(o.DateLastUpdate) {
		return true
	}

	return false
}

// SetDateLastUpdate gets a reference to the given string and assigns it to the DateLastUpdate field.
func (o *DepotAggregation) SetDateLastUpdate(v string) {
	o.DateLastUpdate = &v
}

// GetCurrentValue returns the CurrentValue field value if set, zero value otherwise.
func (o *DepotAggregation) GetCurrentValue() AmountValue {
	if o == nil || IsNil(o.CurrentValue) {
		var ret AmountValue
		return ret
	}
	return *o.CurrentValue
}

// GetCurrentValueOk returns a tuple with the CurrentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetCurrentValueOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.CurrentValue) {
		return nil, false
	}
	return o.CurrentValue, true
}

// HasCurrentValue returns a boolean if a field has been set.
func (o *DepotAggregation) HasCurrentValue() bool {
	if o != nil && !IsNil(o.CurrentValue) {
		return true
	}

	return false
}

// SetCurrentValue gets a reference to the given AmountValue and assigns it to the CurrentValue field.
func (o *DepotAggregation) SetCurrentValue(v AmountValue) {
	o.CurrentValue = &v
}

// GetPurchaseValue returns the PurchaseValue field value if set, zero value otherwise.
func (o *DepotAggregation) GetPurchaseValue() AmountValue {
	if o == nil || IsNil(o.PurchaseValue) {
		var ret AmountValue
		return ret
	}
	return *o.PurchaseValue
}

// GetPurchaseValueOk returns a tuple with the PurchaseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetPurchaseValueOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.PurchaseValue) {
		return nil, false
	}
	return o.PurchaseValue, true
}

// HasPurchaseValue returns a boolean if a field has been set.
func (o *DepotAggregation) HasPurchaseValue() bool {
	if o != nil && !IsNil(o.PurchaseValue) {
		return true
	}

	return false
}

// SetPurchaseValue gets a reference to the given AmountValue and assigns it to the PurchaseValue field.
func (o *DepotAggregation) SetPurchaseValue(v AmountValue) {
	o.PurchaseValue = &v
}

// GetPrevDayValue returns the PrevDayValue field value if set, zero value otherwise.
func (o *DepotAggregation) GetPrevDayValue() AmountValue {
	if o == nil || IsNil(o.PrevDayValue) {
		var ret AmountValue
		return ret
	}
	return *o.PrevDayValue
}

// GetPrevDayValueOk returns a tuple with the PrevDayValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetPrevDayValueOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.PrevDayValue) {
		return nil, false
	}
	return o.PrevDayValue, true
}

// HasPrevDayValue returns a boolean if a field has been set.
func (o *DepotAggregation) HasPrevDayValue() bool {
	if o != nil && !IsNil(o.PrevDayValue) {
		return true
	}

	return false
}

// SetPrevDayValue gets a reference to the given AmountValue and assigns it to the PrevDayValue field.
func (o *DepotAggregation) SetPrevDayValue(v AmountValue) {
	o.PrevDayValue = &v
}

// GetLendingValue returns the LendingValue field value if set, zero value otherwise.
func (o *DepotAggregation) GetLendingValue() AmountValue {
	if o == nil || IsNil(o.LendingValue) {
		var ret AmountValue
		return ret
	}
	return *o.LendingValue
}

// GetLendingValueOk returns a tuple with the LendingValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetLendingValueOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.LendingValue) {
		return nil, false
	}
	return o.LendingValue, true
}

// HasLendingValue returns a boolean if a field has been set.
func (o *DepotAggregation) HasLendingValue() bool {
	if o != nil && !IsNil(o.LendingValue) {
		return true
	}

	return false
}

// SetLendingValue gets a reference to the given AmountValue and assigns it to the LendingValue field.
func (o *DepotAggregation) SetLendingValue(v AmountValue) {
	o.LendingValue = &v
}

// GetProfitLossPurchaseAbs returns the ProfitLossPurchaseAbs field value if set, zero value otherwise.
func (o *DepotAggregation) GetProfitLossPurchaseAbs() AmountValue {
	if o == nil || IsNil(o.ProfitLossPurchaseAbs) {
		var ret AmountValue
		return ret
	}
	return *o.ProfitLossPurchaseAbs
}

// GetProfitLossPurchaseAbsOk returns a tuple with the ProfitLossPurchaseAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetProfitLossPurchaseAbsOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.ProfitLossPurchaseAbs) {
		return nil, false
	}
	return o.ProfitLossPurchaseAbs, true
}

// HasProfitLossPurchaseAbs returns a boolean if a field has been set.
func (o *DepotAggregation) HasProfitLossPurchaseAbs() bool {
	if o != nil && !IsNil(o.ProfitLossPurchaseAbs) {
		return true
	}

	return false
}

// SetProfitLossPurchaseAbs gets a reference to the given AmountValue and assigns it to the ProfitLossPurchaseAbs field.
func (o *DepotAggregation) SetProfitLossPurchaseAbs(v AmountValue) {
	o.ProfitLossPurchaseAbs = &v
}

// GetProfitLossPurchaseRel returns the ProfitLossPurchaseRel field value if set, zero value otherwise.
func (o *DepotAggregation) GetProfitLossPurchaseRel() PercentageString {
	if o == nil || IsNil(o.ProfitLossPurchaseRel) {
		var ret PercentageString
		return ret
	}
	return *o.ProfitLossPurchaseRel
}

// GetProfitLossPurchaseRelOk returns a tuple with the ProfitLossPurchaseRel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetProfitLossPurchaseRelOk() (*PercentageString, bool) {
	if o == nil || IsNil(o.ProfitLossPurchaseRel) {
		return nil, false
	}
	return o.ProfitLossPurchaseRel, true
}

// HasProfitLossPurchaseRel returns a boolean if a field has been set.
func (o *DepotAggregation) HasProfitLossPurchaseRel() bool {
	if o != nil && !IsNil(o.ProfitLossPurchaseRel) {
		return true
	}

	return false
}

// SetProfitLossPurchaseRel gets a reference to the given PercentageString and assigns it to the ProfitLossPurchaseRel field.
func (o *DepotAggregation) SetProfitLossPurchaseRel(v PercentageString) {
	o.ProfitLossPurchaseRel = &v
}

// GetProfitLossPrevDayAbs returns the ProfitLossPrevDayAbs field value if set, zero value otherwise.
func (o *DepotAggregation) GetProfitLossPrevDayAbs() AmountValue {
	if o == nil || IsNil(o.ProfitLossPrevDayAbs) {
		var ret AmountValue
		return ret
	}
	return *o.ProfitLossPrevDayAbs
}

// GetProfitLossPrevDayAbsOk returns a tuple with the ProfitLossPrevDayAbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetProfitLossPrevDayAbsOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.ProfitLossPrevDayAbs) {
		return nil, false
	}
	return o.ProfitLossPrevDayAbs, true
}

// HasProfitLossPrevDayAbs returns a boolean if a field has been set.
func (o *DepotAggregation) HasProfitLossPrevDayAbs() bool {
	if o != nil && !IsNil(o.ProfitLossPrevDayAbs) {
		return true
	}

	return false
}

// SetProfitLossPrevDayAbs gets a reference to the given AmountValue and assigns it to the ProfitLossPrevDayAbs field.
func (o *DepotAggregation) SetProfitLossPrevDayAbs(v AmountValue) {
	o.ProfitLossPrevDayAbs = &v
}

// GetProfitLossPrevDayRel returns the ProfitLossPrevDayRel field value if set, zero value otherwise.
func (o *DepotAggregation) GetProfitLossPrevDayRel() PercentageString {
	if o == nil || IsNil(o.ProfitLossPrevDayRel) {
		var ret PercentageString
		return ret
	}
	return *o.ProfitLossPrevDayRel
}

// GetProfitLossPrevDayRelOk returns a tuple with the ProfitLossPrevDayRel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepotAggregation) GetProfitLossPrevDayRelOk() (*PercentageString, bool) {
	if o == nil || IsNil(o.ProfitLossPrevDayRel) {
		return nil, false
	}
	return o.ProfitLossPrevDayRel, true
}

// HasProfitLossPrevDayRel returns a boolean if a field has been set.
func (o *DepotAggregation) HasProfitLossPrevDayRel() bool {
	if o != nil && !IsNil(o.ProfitLossPrevDayRel) {
		return true
	}

	return false
}

// SetProfitLossPrevDayRel gets a reference to the given PercentageString and assigns it to the ProfitLossPrevDayRel field.
func (o *DepotAggregation) SetProfitLossPrevDayRel(v PercentageString) {
	o.ProfitLossPrevDayRel = &v
}

func (o DepotAggregation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepotAggregation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Depot) {
		toSerialize["depot"] = o.Depot
	}
	if !IsNil(o.DepotId) {
		toSerialize["depotId"] = o.DepotId
	}
	if !IsNil(o.DateLastUpdate) {
		toSerialize["dateLastUpdate"] = o.DateLastUpdate
	}
	if !IsNil(o.CurrentValue) {
		toSerialize["currentValue"] = o.CurrentValue
	}
	if !IsNil(o.PurchaseValue) {
		toSerialize["purchaseValue"] = o.PurchaseValue
	}
	if !IsNil(o.PrevDayValue) {
		toSerialize["prevDayValue"] = o.PrevDayValue
	}
	if !IsNil(o.LendingValue) {
		toSerialize["lendingValue"] = o.LendingValue
	}
	if !IsNil(o.ProfitLossPurchaseAbs) {
		toSerialize["profitLossPurchaseAbs"] = o.ProfitLossPurchaseAbs
	}
	if !IsNil(o.ProfitLossPurchaseRel) {
		toSerialize["profitLossPurchaseRel"] = o.ProfitLossPurchaseRel
	}
	if !IsNil(o.ProfitLossPrevDayAbs) {
		toSerialize["profitLossPrevDayAbs"] = o.ProfitLossPrevDayAbs
	}
	if !IsNil(o.ProfitLossPrevDayRel) {
		toSerialize["profitLossPrevDayRel"] = o.ProfitLossPrevDayRel
	}
	return toSerialize, nil
}

type NullableDepotAggregation struct {
	value *DepotAggregation
	isSet bool
}

func (v NullableDepotAggregation) Get() *DepotAggregation {
	return v.value
}

func (v *NullableDepotAggregation) Set(val *DepotAggregation) {
	v.value = val
	v.isSet = true
}

func (v NullableDepotAggregation) IsSet() bool {
	return v.isSet
}

func (v *NullableDepotAggregation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepotAggregation(val *DepotAggregation) *NullableDepotAggregation {
	return &NullableDepotAggregation{value: val, isSet: true}
}

func (v NullableDepotAggregation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepotAggregation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


