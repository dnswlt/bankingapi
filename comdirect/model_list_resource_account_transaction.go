/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the ListResourceAccountTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourceAccountTransaction{}

// ListResourceAccountTransaction struct for ListResourceAccountTransaction
type ListResourceAccountTransaction struct {
	Paging *PagingInfo `json:"paging,omitempty"`
	Aggregated map[string]interface{} `json:"aggregated,omitempty"`
	Values []AccountTransaction `json:"values,omitempty"`
}

// NewListResourceAccountTransaction instantiates a new ListResourceAccountTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourceAccountTransaction() *ListResourceAccountTransaction {
	this := ListResourceAccountTransaction{}
	return &this
}

// NewListResourceAccountTransactionWithDefaults instantiates a new ListResourceAccountTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourceAccountTransactionWithDefaults() *ListResourceAccountTransaction {
	this := ListResourceAccountTransaction{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ListResourceAccountTransaction) GetPaging() PagingInfo {
	if o == nil || IsNil(o.Paging) {
		var ret PagingInfo
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceAccountTransaction) GetPagingOk() (*PagingInfo, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ListResourceAccountTransaction) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PagingInfo and assigns it to the Paging field.
func (o *ListResourceAccountTransaction) SetPaging(v PagingInfo) {
	o.Paging = &v
}

// GetAggregated returns the Aggregated field value if set, zero value otherwise.
func (o *ListResourceAccountTransaction) GetAggregated() map[string]interface{} {
	if o == nil || IsNil(o.Aggregated) {
		var ret map[string]interface{}
		return ret
	}
	return o.Aggregated
}

// GetAggregatedOk returns a tuple with the Aggregated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceAccountTransaction) GetAggregatedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Aggregated) {
		return map[string]interface{}{}, false
	}
	return o.Aggregated, true
}

// HasAggregated returns a boolean if a field has been set.
func (o *ListResourceAccountTransaction) HasAggregated() bool {
	if o != nil && !IsNil(o.Aggregated) {
		return true
	}

	return false
}

// SetAggregated gets a reference to the given map[string]interface{} and assigns it to the Aggregated field.
func (o *ListResourceAccountTransaction) SetAggregated(v map[string]interface{}) {
	o.Aggregated = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ListResourceAccountTransaction) GetValues() []AccountTransaction {
	if o == nil || IsNil(o.Values) {
		var ret []AccountTransaction
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceAccountTransaction) GetValuesOk() ([]AccountTransaction, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ListResourceAccountTransaction) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []AccountTransaction and assigns it to the Values field.
func (o *ListResourceAccountTransaction) SetValues(v []AccountTransaction) {
	o.Values = v
}

func (o ListResourceAccountTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourceAccountTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.Aggregated) {
		toSerialize["aggregated"] = o.Aggregated
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableListResourceAccountTransaction struct {
	value *ListResourceAccountTransaction
	isSet bool
}

func (v NullableListResourceAccountTransaction) Get() *ListResourceAccountTransaction {
	return v.value
}

func (v *NullableListResourceAccountTransaction) Set(val *ListResourceAccountTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourceAccountTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourceAccountTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourceAccountTransaction(val *ListResourceAccountTransaction) *NullableListResourceAccountTransaction {
	return &NullableListResourceAccountTransaction{value: val, isSet: true}
}

func (v NullableListResourceAccountTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourceAccountTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


