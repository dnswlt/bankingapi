/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the InstallmentLoanBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallmentLoanBalance{}

// InstallmentLoanBalance Balance and master data of an installment loan
type InstallmentLoanBalance struct {
	// Installment loan identifier (UUID).
	InstallmentLoanId *string `json:"installmentLoanId,omitempty"`
	InstallmentLoan *InstallmentLoan `json:"installmentLoan,omitempty"`
	Balance *AmountValue `json:"balance,omitempty"`
}

// NewInstallmentLoanBalance instantiates a new InstallmentLoanBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentLoanBalance() *InstallmentLoanBalance {
	this := InstallmentLoanBalance{}
	return &this
}

// NewInstallmentLoanBalanceWithDefaults instantiates a new InstallmentLoanBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentLoanBalanceWithDefaults() *InstallmentLoanBalance {
	this := InstallmentLoanBalance{}
	return &this
}

// GetInstallmentLoanId returns the InstallmentLoanId field value if set, zero value otherwise.
func (o *InstallmentLoanBalance) GetInstallmentLoanId() string {
	if o == nil || IsNil(o.InstallmentLoanId) {
		var ret string
		return ret
	}
	return *o.InstallmentLoanId
}

// GetInstallmentLoanIdOk returns a tuple with the InstallmentLoanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoanBalance) GetInstallmentLoanIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstallmentLoanId) {
		return nil, false
	}
	return o.InstallmentLoanId, true
}

// HasInstallmentLoanId returns a boolean if a field has been set.
func (o *InstallmentLoanBalance) HasInstallmentLoanId() bool {
	if o != nil && !IsNil(o.InstallmentLoanId) {
		return true
	}

	return false
}

// SetInstallmentLoanId gets a reference to the given string and assigns it to the InstallmentLoanId field.
func (o *InstallmentLoanBalance) SetInstallmentLoanId(v string) {
	o.InstallmentLoanId = &v
}

// GetInstallmentLoan returns the InstallmentLoan field value if set, zero value otherwise.
func (o *InstallmentLoanBalance) GetInstallmentLoan() InstallmentLoan {
	if o == nil || IsNil(o.InstallmentLoan) {
		var ret InstallmentLoan
		return ret
	}
	return *o.InstallmentLoan
}

// GetInstallmentLoanOk returns a tuple with the InstallmentLoan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoanBalance) GetInstallmentLoanOk() (*InstallmentLoan, bool) {
	if o == nil || IsNil(o.InstallmentLoan) {
		return nil, false
	}
	return o.InstallmentLoan, true
}

// HasInstallmentLoan returns a boolean if a field has been set.
func (o *InstallmentLoanBalance) HasInstallmentLoan() bool {
	if o != nil && !IsNil(o.InstallmentLoan) {
		return true
	}

	return false
}

// SetInstallmentLoan gets a reference to the given InstallmentLoan and assigns it to the InstallmentLoan field.
func (o *InstallmentLoanBalance) SetInstallmentLoan(v InstallmentLoan) {
	o.InstallmentLoan = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *InstallmentLoanBalance) GetBalance() AmountValue {
	if o == nil || IsNil(o.Balance) {
		var ret AmountValue
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoanBalance) GetBalanceOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *InstallmentLoanBalance) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given AmountValue and assigns it to the Balance field.
func (o *InstallmentLoanBalance) SetBalance(v AmountValue) {
	o.Balance = &v
}

func (o InstallmentLoanBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallmentLoanBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallmentLoanId) {
		toSerialize["installmentLoanId"] = o.InstallmentLoanId
	}
	if !IsNil(o.InstallmentLoan) {
		toSerialize["installmentLoan"] = o.InstallmentLoan
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	return toSerialize, nil
}

type NullableInstallmentLoanBalance struct {
	value *InstallmentLoanBalance
	isSet bool
}

func (v NullableInstallmentLoanBalance) Get() *InstallmentLoanBalance {
	return v.value
}

func (v *NullableInstallmentLoanBalance) Set(val *InstallmentLoanBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentLoanBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentLoanBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentLoanBalance(val *InstallmentLoanBalance) *NullableInstallmentLoanBalance {
	return &NullableInstallmentLoanBalance{value: val, isSet: true}
}

func (v NullableInstallmentLoanBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentLoanBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


