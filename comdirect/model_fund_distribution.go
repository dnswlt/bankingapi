/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the FundDistribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FundDistribution{}

// FundDistribution additional fund data, if the instrument is a fund
type FundDistribution struct {
	// Status of fund
	FundStatus *string `json:"fundStatus,omitempty"`
	// List of different features of funds
	FundFlags []string `json:"fundFlags,omitempty"`
	// currency of fund
	Currency *string `json:"currency,omitempty"`
	// Regular issue surcharge
	RegularIssueSurcharge *string `json:"regularIssueSurcharge,omitempty"`
	// Discount issue surcharge
	DiscountIssueSurcharge *string `json:"discountIssueSurcharge,omitempty"`
	// Reduced issue surcharge
	ReducedIssueSurcharge *string `json:"reducedIssueSurcharge,omitempty"`
	// Individual issue surcharge
	IndividualIssueSurcharge *string `json:"individualIssueSurcharge,omitempty"`
	// Is individual issue surcharge corrected
	IsIndividualIssueSurchargeCorrected *bool `json:"isIndividualIssueSurchargeCorrected,omitempty"`
	// Bonification
	Bonification *string `json:"bonification,omitempty"`
	// Investment category
	InvestmentCategory *string `json:"investmentCategory,omitempty"`
	// Total expense ratio
	TotalExpenseRatio *string `json:"totalExpenseRatio,omitempty"`
	Rating *Rating `json:"rating,omitempty"`
}

// NewFundDistribution instantiates a new FundDistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundDistribution() *FundDistribution {
	this := FundDistribution{}
	return &this
}

// NewFundDistributionWithDefaults instantiates a new FundDistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundDistributionWithDefaults() *FundDistribution {
	this := FundDistribution{}
	return &this
}

// GetFundStatus returns the FundStatus field value if set, zero value otherwise.
func (o *FundDistribution) GetFundStatus() string {
	if o == nil || IsNil(o.FundStatus) {
		var ret string
		return ret
	}
	return *o.FundStatus
}

// GetFundStatusOk returns a tuple with the FundStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetFundStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FundStatus) {
		return nil, false
	}
	return o.FundStatus, true
}

// HasFundStatus returns a boolean if a field has been set.
func (o *FundDistribution) HasFundStatus() bool {
	if o != nil && !IsNil(o.FundStatus) {
		return true
	}

	return false
}

// SetFundStatus gets a reference to the given string and assigns it to the FundStatus field.
func (o *FundDistribution) SetFundStatus(v string) {
	o.FundStatus = &v
}

// GetFundFlags returns the FundFlags field value if set, zero value otherwise.
func (o *FundDistribution) GetFundFlags() []string {
	if o == nil || IsNil(o.FundFlags) {
		var ret []string
		return ret
	}
	return o.FundFlags
}

// GetFundFlagsOk returns a tuple with the FundFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetFundFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.FundFlags) {
		return nil, false
	}
	return o.FundFlags, true
}

// HasFundFlags returns a boolean if a field has been set.
func (o *FundDistribution) HasFundFlags() bool {
	if o != nil && !IsNil(o.FundFlags) {
		return true
	}

	return false
}

// SetFundFlags gets a reference to the given []string and assigns it to the FundFlags field.
func (o *FundDistribution) SetFundFlags(v []string) {
	o.FundFlags = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *FundDistribution) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *FundDistribution) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *FundDistribution) SetCurrency(v string) {
	o.Currency = &v
}

// GetRegularIssueSurcharge returns the RegularIssueSurcharge field value if set, zero value otherwise.
func (o *FundDistribution) GetRegularIssueSurcharge() string {
	if o == nil || IsNil(o.RegularIssueSurcharge) {
		var ret string
		return ret
	}
	return *o.RegularIssueSurcharge
}

// GetRegularIssueSurchargeOk returns a tuple with the RegularIssueSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetRegularIssueSurchargeOk() (*string, bool) {
	if o == nil || IsNil(o.RegularIssueSurcharge) {
		return nil, false
	}
	return o.RegularIssueSurcharge, true
}

// HasRegularIssueSurcharge returns a boolean if a field has been set.
func (o *FundDistribution) HasRegularIssueSurcharge() bool {
	if o != nil && !IsNil(o.RegularIssueSurcharge) {
		return true
	}

	return false
}

// SetRegularIssueSurcharge gets a reference to the given string and assigns it to the RegularIssueSurcharge field.
func (o *FundDistribution) SetRegularIssueSurcharge(v string) {
	o.RegularIssueSurcharge = &v
}

// GetDiscountIssueSurcharge returns the DiscountIssueSurcharge field value if set, zero value otherwise.
func (o *FundDistribution) GetDiscountIssueSurcharge() string {
	if o == nil || IsNil(o.DiscountIssueSurcharge) {
		var ret string
		return ret
	}
	return *o.DiscountIssueSurcharge
}

// GetDiscountIssueSurchargeOk returns a tuple with the DiscountIssueSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetDiscountIssueSurchargeOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountIssueSurcharge) {
		return nil, false
	}
	return o.DiscountIssueSurcharge, true
}

// HasDiscountIssueSurcharge returns a boolean if a field has been set.
func (o *FundDistribution) HasDiscountIssueSurcharge() bool {
	if o != nil && !IsNil(o.DiscountIssueSurcharge) {
		return true
	}

	return false
}

// SetDiscountIssueSurcharge gets a reference to the given string and assigns it to the DiscountIssueSurcharge field.
func (o *FundDistribution) SetDiscountIssueSurcharge(v string) {
	o.DiscountIssueSurcharge = &v
}

// GetReducedIssueSurcharge returns the ReducedIssueSurcharge field value if set, zero value otherwise.
func (o *FundDistribution) GetReducedIssueSurcharge() string {
	if o == nil || IsNil(o.ReducedIssueSurcharge) {
		var ret string
		return ret
	}
	return *o.ReducedIssueSurcharge
}

// GetReducedIssueSurchargeOk returns a tuple with the ReducedIssueSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetReducedIssueSurchargeOk() (*string, bool) {
	if o == nil || IsNil(o.ReducedIssueSurcharge) {
		return nil, false
	}
	return o.ReducedIssueSurcharge, true
}

// HasReducedIssueSurcharge returns a boolean if a field has been set.
func (o *FundDistribution) HasReducedIssueSurcharge() bool {
	if o != nil && !IsNil(o.ReducedIssueSurcharge) {
		return true
	}

	return false
}

// SetReducedIssueSurcharge gets a reference to the given string and assigns it to the ReducedIssueSurcharge field.
func (o *FundDistribution) SetReducedIssueSurcharge(v string) {
	o.ReducedIssueSurcharge = &v
}

// GetIndividualIssueSurcharge returns the IndividualIssueSurcharge field value if set, zero value otherwise.
func (o *FundDistribution) GetIndividualIssueSurcharge() string {
	if o == nil || IsNil(o.IndividualIssueSurcharge) {
		var ret string
		return ret
	}
	return *o.IndividualIssueSurcharge
}

// GetIndividualIssueSurchargeOk returns a tuple with the IndividualIssueSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetIndividualIssueSurchargeOk() (*string, bool) {
	if o == nil || IsNil(o.IndividualIssueSurcharge) {
		return nil, false
	}
	return o.IndividualIssueSurcharge, true
}

// HasIndividualIssueSurcharge returns a boolean if a field has been set.
func (o *FundDistribution) HasIndividualIssueSurcharge() bool {
	if o != nil && !IsNil(o.IndividualIssueSurcharge) {
		return true
	}

	return false
}

// SetIndividualIssueSurcharge gets a reference to the given string and assigns it to the IndividualIssueSurcharge field.
func (o *FundDistribution) SetIndividualIssueSurcharge(v string) {
	o.IndividualIssueSurcharge = &v
}

// GetIsIndividualIssueSurchargeCorrected returns the IsIndividualIssueSurchargeCorrected field value if set, zero value otherwise.
func (o *FundDistribution) GetIsIndividualIssueSurchargeCorrected() bool {
	if o == nil || IsNil(o.IsIndividualIssueSurchargeCorrected) {
		var ret bool
		return ret
	}
	return *o.IsIndividualIssueSurchargeCorrected
}

// GetIsIndividualIssueSurchargeCorrectedOk returns a tuple with the IsIndividualIssueSurchargeCorrected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetIsIndividualIssueSurchargeCorrectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsIndividualIssueSurchargeCorrected) {
		return nil, false
	}
	return o.IsIndividualIssueSurchargeCorrected, true
}

// HasIsIndividualIssueSurchargeCorrected returns a boolean if a field has been set.
func (o *FundDistribution) HasIsIndividualIssueSurchargeCorrected() bool {
	if o != nil && !IsNil(o.IsIndividualIssueSurchargeCorrected) {
		return true
	}

	return false
}

// SetIsIndividualIssueSurchargeCorrected gets a reference to the given bool and assigns it to the IsIndividualIssueSurchargeCorrected field.
func (o *FundDistribution) SetIsIndividualIssueSurchargeCorrected(v bool) {
	o.IsIndividualIssueSurchargeCorrected = &v
}

// GetBonification returns the Bonification field value if set, zero value otherwise.
func (o *FundDistribution) GetBonification() string {
	if o == nil || IsNil(o.Bonification) {
		var ret string
		return ret
	}
	return *o.Bonification
}

// GetBonificationOk returns a tuple with the Bonification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetBonificationOk() (*string, bool) {
	if o == nil || IsNil(o.Bonification) {
		return nil, false
	}
	return o.Bonification, true
}

// HasBonification returns a boolean if a field has been set.
func (o *FundDistribution) HasBonification() bool {
	if o != nil && !IsNil(o.Bonification) {
		return true
	}

	return false
}

// SetBonification gets a reference to the given string and assigns it to the Bonification field.
func (o *FundDistribution) SetBonification(v string) {
	o.Bonification = &v
}

// GetInvestmentCategory returns the InvestmentCategory field value if set, zero value otherwise.
func (o *FundDistribution) GetInvestmentCategory() string {
	if o == nil || IsNil(o.InvestmentCategory) {
		var ret string
		return ret
	}
	return *o.InvestmentCategory
}

// GetInvestmentCategoryOk returns a tuple with the InvestmentCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetInvestmentCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.InvestmentCategory) {
		return nil, false
	}
	return o.InvestmentCategory, true
}

// HasInvestmentCategory returns a boolean if a field has been set.
func (o *FundDistribution) HasInvestmentCategory() bool {
	if o != nil && !IsNil(o.InvestmentCategory) {
		return true
	}

	return false
}

// SetInvestmentCategory gets a reference to the given string and assigns it to the InvestmentCategory field.
func (o *FundDistribution) SetInvestmentCategory(v string) {
	o.InvestmentCategory = &v
}

// GetTotalExpenseRatio returns the TotalExpenseRatio field value if set, zero value otherwise.
func (o *FundDistribution) GetTotalExpenseRatio() string {
	if o == nil || IsNil(o.TotalExpenseRatio) {
		var ret string
		return ret
	}
	return *o.TotalExpenseRatio
}

// GetTotalExpenseRatioOk returns a tuple with the TotalExpenseRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetTotalExpenseRatioOk() (*string, bool) {
	if o == nil || IsNil(o.TotalExpenseRatio) {
		return nil, false
	}
	return o.TotalExpenseRatio, true
}

// HasTotalExpenseRatio returns a boolean if a field has been set.
func (o *FundDistribution) HasTotalExpenseRatio() bool {
	if o != nil && !IsNil(o.TotalExpenseRatio) {
		return true
	}

	return false
}

// SetTotalExpenseRatio gets a reference to the given string and assigns it to the TotalExpenseRatio field.
func (o *FundDistribution) SetTotalExpenseRatio(v string) {
	o.TotalExpenseRatio = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *FundDistribution) GetRating() Rating {
	if o == nil || IsNil(o.Rating) {
		var ret Rating
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundDistribution) GetRatingOk() (*Rating, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *FundDistribution) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given Rating and assigns it to the Rating field.
func (o *FundDistribution) SetRating(v Rating) {
	o.Rating = &v
}

func (o FundDistribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FundDistribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FundStatus) {
		toSerialize["fundStatus"] = o.FundStatus
	}
	if !IsNil(o.FundFlags) {
		toSerialize["fundFlags"] = o.FundFlags
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.RegularIssueSurcharge) {
		toSerialize["regularIssueSurcharge"] = o.RegularIssueSurcharge
	}
	if !IsNil(o.DiscountIssueSurcharge) {
		toSerialize["discountIssueSurcharge"] = o.DiscountIssueSurcharge
	}
	if !IsNil(o.ReducedIssueSurcharge) {
		toSerialize["reducedIssueSurcharge"] = o.ReducedIssueSurcharge
	}
	if !IsNil(o.IndividualIssueSurcharge) {
		toSerialize["individualIssueSurcharge"] = o.IndividualIssueSurcharge
	}
	if !IsNil(o.IsIndividualIssueSurchargeCorrected) {
		toSerialize["isIndividualIssueSurchargeCorrected"] = o.IsIndividualIssueSurchargeCorrected
	}
	if !IsNil(o.Bonification) {
		toSerialize["bonification"] = o.Bonification
	}
	if !IsNil(o.InvestmentCategory) {
		toSerialize["investmentCategory"] = o.InvestmentCategory
	}
	if !IsNil(o.TotalExpenseRatio) {
		toSerialize["totalExpenseRatio"] = o.TotalExpenseRatio
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	return toSerialize, nil
}

type NullableFundDistribution struct {
	value *FundDistribution
	isSet bool
}

func (v NullableFundDistribution) Get() *FundDistribution {
	return v.value
}

func (v *NullableFundDistribution) Set(val *FundDistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableFundDistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableFundDistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundDistribution(val *FundDistribution) *NullableFundDistribution {
	return &NullableFundDistribution{value: val, isSet: true}
}

func (v NullableFundDistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundDistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


