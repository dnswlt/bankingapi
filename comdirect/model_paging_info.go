/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the PagingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PagingInfo{}

// PagingInfo struct for PagingInfo
type PagingInfo struct {
	Index *int32 `json:"index,omitempty"`
	Matches *int32 `json:"matches,omitempty"`
}

// NewPagingInfo instantiates a new PagingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagingInfo() *PagingInfo {
	this := PagingInfo{}
	return &this
}

// NewPagingInfoWithDefaults instantiates a new PagingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagingInfoWithDefaults() *PagingInfo {
	this := PagingInfo{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *PagingInfo) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagingInfo) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *PagingInfo) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *PagingInfo) SetIndex(v int32) {
	o.Index = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *PagingInfo) GetMatches() int32 {
	if o == nil || IsNil(o.Matches) {
		var ret int32
		return ret
	}
	return *o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagingInfo) GetMatchesOk() (*int32, bool) {
	if o == nil || IsNil(o.Matches) {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *PagingInfo) HasMatches() bool {
	if o != nil && !IsNil(o.Matches) {
		return true
	}

	return false
}

// SetMatches gets a reference to the given int32 and assigns it to the Matches field.
func (o *PagingInfo) SetMatches(v int32) {
	o.Matches = &v
}

func (o PagingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PagingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Matches) {
		toSerialize["matches"] = o.Matches
	}
	return toSerialize, nil
}

type NullablePagingInfo struct {
	value *PagingInfo
	isSet bool
}

func (v NullablePagingInfo) Get() *PagingInfo {
	return v.value
}

func (v *NullablePagingInfo) Set(val *PagingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePagingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePagingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagingInfo(val *PagingInfo) *NullablePagingInfo {
	return &NullablePagingInfo{value: val, isSet: true}
}

func (v NullablePagingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


