/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the TotalHoldingCostEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TotalHoldingCostEntry{}

// TotalHoldingCostEntry Model for cost block over time.
type TotalHoldingCostEntry struct {
	// Type of total holding cost entry
	Type *string `json:"type,omitempty"`
	Amount *AmountValue `json:"amount,omitempty"`
	AverageReturnPA *PercentageString `json:"averageReturnPA,omitempty"`
}

// NewTotalHoldingCostEntry instantiates a new TotalHoldingCostEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotalHoldingCostEntry() *TotalHoldingCostEntry {
	this := TotalHoldingCostEntry{}
	return &this
}

// NewTotalHoldingCostEntryWithDefaults instantiates a new TotalHoldingCostEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotalHoldingCostEntryWithDefaults() *TotalHoldingCostEntry {
	this := TotalHoldingCostEntry{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TotalHoldingCostEntry) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalHoldingCostEntry) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TotalHoldingCostEntry) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TotalHoldingCostEntry) SetType(v string) {
	o.Type = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TotalHoldingCostEntry) GetAmount() AmountValue {
	if o == nil || IsNil(o.Amount) {
		var ret AmountValue
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalHoldingCostEntry) GetAmountOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TotalHoldingCostEntry) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given AmountValue and assigns it to the Amount field.
func (o *TotalHoldingCostEntry) SetAmount(v AmountValue) {
	o.Amount = &v
}

// GetAverageReturnPA returns the AverageReturnPA field value if set, zero value otherwise.
func (o *TotalHoldingCostEntry) GetAverageReturnPA() PercentageString {
	if o == nil || IsNil(o.AverageReturnPA) {
		var ret PercentageString
		return ret
	}
	return *o.AverageReturnPA
}

// GetAverageReturnPAOk returns a tuple with the AverageReturnPA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalHoldingCostEntry) GetAverageReturnPAOk() (*PercentageString, bool) {
	if o == nil || IsNil(o.AverageReturnPA) {
		return nil, false
	}
	return o.AverageReturnPA, true
}

// HasAverageReturnPA returns a boolean if a field has been set.
func (o *TotalHoldingCostEntry) HasAverageReturnPA() bool {
	if o != nil && !IsNil(o.AverageReturnPA) {
		return true
	}

	return false
}

// SetAverageReturnPA gets a reference to the given PercentageString and assigns it to the AverageReturnPA field.
func (o *TotalHoldingCostEntry) SetAverageReturnPA(v PercentageString) {
	o.AverageReturnPA = &v
}

func (o TotalHoldingCostEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TotalHoldingCostEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AverageReturnPA) {
		toSerialize["averageReturnPA"] = o.AverageReturnPA
	}
	return toSerialize, nil
}

type NullableTotalHoldingCostEntry struct {
	value *TotalHoldingCostEntry
	isSet bool
}

func (v NullableTotalHoldingCostEntry) Get() *TotalHoldingCostEntry {
	return v.value
}

func (v *NullableTotalHoldingCostEntry) Set(val *TotalHoldingCostEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTotalHoldingCostEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTotalHoldingCostEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotalHoldingCostEntry(val *TotalHoldingCostEntry) *NullableTotalHoldingCostEntry {
	return &NullableTotalHoldingCostEntry{value: val, isSet: true}
}

func (v NullableTotalHoldingCostEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotalHoldingCostEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


