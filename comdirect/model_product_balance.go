/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the ProductBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductBalance{}

// ProductBalance Model for a product balance.
type ProductBalance struct {
	// Unique ID of the product (UUID).
	ProductId *string `json:"productId,omitempty"`
	// Type of the product.
	ProductType *string `json:"productType,omitempty"`
	// Unique Id of the target client (UUID).
	TargetClientId *string `json:"targetClientId,omitempty"`
	// Type of the client connection.
	ClientConnectionType *string `json:"clientConnectionType,omitempty"`
	Balance *Balance `json:"balance,omitempty"`
}

// NewProductBalance instantiates a new ProductBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductBalance() *ProductBalance {
	this := ProductBalance{}
	return &this
}

// NewProductBalanceWithDefaults instantiates a new ProductBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductBalanceWithDefaults() *ProductBalance {
	this := ProductBalance{}
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ProductBalance) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBalance) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ProductBalance) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ProductBalance) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *ProductBalance) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBalance) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *ProductBalance) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *ProductBalance) SetProductType(v string) {
	o.ProductType = &v
}

// GetTargetClientId returns the TargetClientId field value if set, zero value otherwise.
func (o *ProductBalance) GetTargetClientId() string {
	if o == nil || IsNil(o.TargetClientId) {
		var ret string
		return ret
	}
	return *o.TargetClientId
}

// GetTargetClientIdOk returns a tuple with the TargetClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBalance) GetTargetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetClientId) {
		return nil, false
	}
	return o.TargetClientId, true
}

// HasTargetClientId returns a boolean if a field has been set.
func (o *ProductBalance) HasTargetClientId() bool {
	if o != nil && !IsNil(o.TargetClientId) {
		return true
	}

	return false
}

// SetTargetClientId gets a reference to the given string and assigns it to the TargetClientId field.
func (o *ProductBalance) SetTargetClientId(v string) {
	o.TargetClientId = &v
}

// GetClientConnectionType returns the ClientConnectionType field value if set, zero value otherwise.
func (o *ProductBalance) GetClientConnectionType() string {
	if o == nil || IsNil(o.ClientConnectionType) {
		var ret string
		return ret
	}
	return *o.ClientConnectionType
}

// GetClientConnectionTypeOk returns a tuple with the ClientConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBalance) GetClientConnectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClientConnectionType) {
		return nil, false
	}
	return o.ClientConnectionType, true
}

// HasClientConnectionType returns a boolean if a field has been set.
func (o *ProductBalance) HasClientConnectionType() bool {
	if o != nil && !IsNil(o.ClientConnectionType) {
		return true
	}

	return false
}

// SetClientConnectionType gets a reference to the given string and assigns it to the ClientConnectionType field.
func (o *ProductBalance) SetClientConnectionType(v string) {
	o.ClientConnectionType = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *ProductBalance) GetBalance() Balance {
	if o == nil || IsNil(o.Balance) {
		var ret Balance
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductBalance) GetBalanceOk() (*Balance, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *ProductBalance) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given Balance and assigns it to the Balance field.
func (o *ProductBalance) SetBalance(v Balance) {
	o.Balance = &v
}

func (o ProductBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !IsNil(o.TargetClientId) {
		toSerialize["targetClientId"] = o.TargetClientId
	}
	if !IsNil(o.ClientConnectionType) {
		toSerialize["clientConnectionType"] = o.ClientConnectionType
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	return toSerialize, nil
}

type NullableProductBalance struct {
	value *ProductBalance
	isSet bool
}

func (v NullableProductBalance) Get() *ProductBalance {
	return v.value
}

func (v *NullableProductBalance) Set(val *ProductBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableProductBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableProductBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductBalance(val *ProductBalance) *NullableProductBalance {
	return &NullableProductBalance{value: val, isSet: true}
}

func (v NullableProductBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


