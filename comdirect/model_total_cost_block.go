/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the TotalCostBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TotalCostBlock{}

// TotalCostBlock Model for a total cost block including total cost entries segregated as: E (own service costs of bank), F (external service costs), and P (product costs).
type TotalCostBlock struct {
	ServiceCosts *TotalCostEntry `json:"serviceCosts,omitempty"`
	ServiceInducement *AmountValue `json:"serviceInducement,omitempty"`
	ExternalCosts *TotalCostEntry `json:"externalCosts,omitempty"`
	ProductCosts *TotalCostEntry `json:"productCosts,omitempty"`
}

// NewTotalCostBlock instantiates a new TotalCostBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotalCostBlock() *TotalCostBlock {
	this := TotalCostBlock{}
	return &this
}

// NewTotalCostBlockWithDefaults instantiates a new TotalCostBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotalCostBlockWithDefaults() *TotalCostBlock {
	this := TotalCostBlock{}
	return &this
}

// GetServiceCosts returns the ServiceCosts field value if set, zero value otherwise.
func (o *TotalCostBlock) GetServiceCosts() TotalCostEntry {
	if o == nil || IsNil(o.ServiceCosts) {
		var ret TotalCostEntry
		return ret
	}
	return *o.ServiceCosts
}

// GetServiceCostsOk returns a tuple with the ServiceCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalCostBlock) GetServiceCostsOk() (*TotalCostEntry, bool) {
	if o == nil || IsNil(o.ServiceCosts) {
		return nil, false
	}
	return o.ServiceCosts, true
}

// HasServiceCosts returns a boolean if a field has been set.
func (o *TotalCostBlock) HasServiceCosts() bool {
	if o != nil && !IsNil(o.ServiceCosts) {
		return true
	}

	return false
}

// SetServiceCosts gets a reference to the given TotalCostEntry and assigns it to the ServiceCosts field.
func (o *TotalCostBlock) SetServiceCosts(v TotalCostEntry) {
	o.ServiceCosts = &v
}

// GetServiceInducement returns the ServiceInducement field value if set, zero value otherwise.
func (o *TotalCostBlock) GetServiceInducement() AmountValue {
	if o == nil || IsNil(o.ServiceInducement) {
		var ret AmountValue
		return ret
	}
	return *o.ServiceInducement
}

// GetServiceInducementOk returns a tuple with the ServiceInducement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalCostBlock) GetServiceInducementOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.ServiceInducement) {
		return nil, false
	}
	return o.ServiceInducement, true
}

// HasServiceInducement returns a boolean if a field has been set.
func (o *TotalCostBlock) HasServiceInducement() bool {
	if o != nil && !IsNil(o.ServiceInducement) {
		return true
	}

	return false
}

// SetServiceInducement gets a reference to the given AmountValue and assigns it to the ServiceInducement field.
func (o *TotalCostBlock) SetServiceInducement(v AmountValue) {
	o.ServiceInducement = &v
}

// GetExternalCosts returns the ExternalCosts field value if set, zero value otherwise.
func (o *TotalCostBlock) GetExternalCosts() TotalCostEntry {
	if o == nil || IsNil(o.ExternalCosts) {
		var ret TotalCostEntry
		return ret
	}
	return *o.ExternalCosts
}

// GetExternalCostsOk returns a tuple with the ExternalCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalCostBlock) GetExternalCostsOk() (*TotalCostEntry, bool) {
	if o == nil || IsNil(o.ExternalCosts) {
		return nil, false
	}
	return o.ExternalCosts, true
}

// HasExternalCosts returns a boolean if a field has been set.
func (o *TotalCostBlock) HasExternalCosts() bool {
	if o != nil && !IsNil(o.ExternalCosts) {
		return true
	}

	return false
}

// SetExternalCosts gets a reference to the given TotalCostEntry and assigns it to the ExternalCosts field.
func (o *TotalCostBlock) SetExternalCosts(v TotalCostEntry) {
	o.ExternalCosts = &v
}

// GetProductCosts returns the ProductCosts field value if set, zero value otherwise.
func (o *TotalCostBlock) GetProductCosts() TotalCostEntry {
	if o == nil || IsNil(o.ProductCosts) {
		var ret TotalCostEntry
		return ret
	}
	return *o.ProductCosts
}

// GetProductCostsOk returns a tuple with the ProductCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalCostBlock) GetProductCostsOk() (*TotalCostEntry, bool) {
	if o == nil || IsNil(o.ProductCosts) {
		return nil, false
	}
	return o.ProductCosts, true
}

// HasProductCosts returns a boolean if a field has been set.
func (o *TotalCostBlock) HasProductCosts() bool {
	if o != nil && !IsNil(o.ProductCosts) {
		return true
	}

	return false
}

// SetProductCosts gets a reference to the given TotalCostEntry and assigns it to the ProductCosts field.
func (o *TotalCostBlock) SetProductCosts(v TotalCostEntry) {
	o.ProductCosts = &v
}

func (o TotalCostBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TotalCostBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceCosts) {
		toSerialize["serviceCosts"] = o.ServiceCosts
	}
	if !IsNil(o.ServiceInducement) {
		toSerialize["serviceInducement"] = o.ServiceInducement
	}
	if !IsNil(o.ExternalCosts) {
		toSerialize["externalCosts"] = o.ExternalCosts
	}
	if !IsNil(o.ProductCosts) {
		toSerialize["productCosts"] = o.ProductCosts
	}
	return toSerialize, nil
}

type NullableTotalCostBlock struct {
	value *TotalCostBlock
	isSet bool
}

func (v NullableTotalCostBlock) Get() *TotalCostBlock {
	return v.value
}

func (v *NullableTotalCostBlock) Set(val *TotalCostBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableTotalCostBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableTotalCostBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotalCostBlock(val *TotalCostBlock) *NullableTotalCostBlock {
	return &NullableTotalCostBlock{value: val, isSet: true}
}

func (v NullableTotalCostBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotalCostBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


