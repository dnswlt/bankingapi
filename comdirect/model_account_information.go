/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the AccountInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountInformation{}

// AccountInformation Model for the information of an account (debtor/creditor).
type AccountInformation struct {
	// name of the account owner
	HolderName *string `json:"holderName,omitempty"`
	// The IBAN (International bank account number) for the account - if available
	Iban *string `json:"iban,omitempty"`
	// The BIC (Bank Identifier Code) for the IBAN - if available
	Bic *string `json:"bic,omitempty"`
}

// NewAccountInformation instantiates a new AccountInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountInformation() *AccountInformation {
	this := AccountInformation{}
	return &this
}

// NewAccountInformationWithDefaults instantiates a new AccountInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountInformationWithDefaults() *AccountInformation {
	this := AccountInformation{}
	return &this
}

// GetHolderName returns the HolderName field value if set, zero value otherwise.
func (o *AccountInformation) GetHolderName() string {
	if o == nil || IsNil(o.HolderName) {
		var ret string
		return ret
	}
	return *o.HolderName
}

// GetHolderNameOk returns a tuple with the HolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInformation) GetHolderNameOk() (*string, bool) {
	if o == nil || IsNil(o.HolderName) {
		return nil, false
	}
	return o.HolderName, true
}

// HasHolderName returns a boolean if a field has been set.
func (o *AccountInformation) HasHolderName() bool {
	if o != nil && !IsNil(o.HolderName) {
		return true
	}

	return false
}

// SetHolderName gets a reference to the given string and assigns it to the HolderName field.
func (o *AccountInformation) SetHolderName(v string) {
	o.HolderName = &v
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountInformation) GetIban() string {
	if o == nil || IsNil(o.Iban) {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInformation) GetIbanOk() (*string, bool) {
	if o == nil || IsNil(o.Iban) {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountInformation) HasIban() bool {
	if o != nil && !IsNil(o.Iban) {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountInformation) SetIban(v string) {
	o.Iban = &v
}

// GetBic returns the Bic field value if set, zero value otherwise.
func (o *AccountInformation) GetBic() string {
	if o == nil || IsNil(o.Bic) {
		var ret string
		return ret
	}
	return *o.Bic
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInformation) GetBicOk() (*string, bool) {
	if o == nil || IsNil(o.Bic) {
		return nil, false
	}
	return o.Bic, true
}

// HasBic returns a boolean if a field has been set.
func (o *AccountInformation) HasBic() bool {
	if o != nil && !IsNil(o.Bic) {
		return true
	}

	return false
}

// SetBic gets a reference to the given string and assigns it to the Bic field.
func (o *AccountInformation) SetBic(v string) {
	o.Bic = &v
}

func (o AccountInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HolderName) {
		toSerialize["holderName"] = o.HolderName
	}
	if !IsNil(o.Iban) {
		toSerialize["iban"] = o.Iban
	}
	if !IsNil(o.Bic) {
		toSerialize["bic"] = o.Bic
	}
	return toSerialize, nil
}

type NullableAccountInformation struct {
	value *AccountInformation
	isSet bool
}

func (v NullableAccountInformation) Get() *AccountInformation {
	return v.value
}

func (v *NullableAccountInformation) Set(val *AccountInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountInformation(val *AccountInformation) *NullableAccountInformation {
	return &NullableAccountInformation{value: val, isSet: true}
}

func (v NullableAccountInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


