/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the Balance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Balance{}

// Balance A balance object is equal to one of the types indicated by the attributes in this definition.
type Balance struct {
	AccountBalance *AccountBalance `json:"accountBalance,omitempty"`
	CardBalance *CardBalance `json:"cardBalance,omitempty"`
	DepotAggregation *DepotAggregation `json:"depotAggregation,omitempty"`
	FixedTermSavings *FixedTermSavings `json:"fixedTermSavings,omitempty"`
	InstallmentLoanBalance *InstallmentLoanBalance `json:"installmentLoanBalance,omitempty"`
}

// NewBalance instantiates a new Balance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalance() *Balance {
	this := Balance{}
	return &this
}

// NewBalanceWithDefaults instantiates a new Balance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceWithDefaults() *Balance {
	this := Balance{}
	return &this
}

// GetAccountBalance returns the AccountBalance field value if set, zero value otherwise.
func (o *Balance) GetAccountBalance() AccountBalance {
	if o == nil || IsNil(o.AccountBalance) {
		var ret AccountBalance
		return ret
	}
	return *o.AccountBalance
}

// GetAccountBalanceOk returns a tuple with the AccountBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Balance) GetAccountBalanceOk() (*AccountBalance, bool) {
	if o == nil || IsNil(o.AccountBalance) {
		return nil, false
	}
	return o.AccountBalance, true
}

// HasAccountBalance returns a boolean if a field has been set.
func (o *Balance) HasAccountBalance() bool {
	if o != nil && !IsNil(o.AccountBalance) {
		return true
	}

	return false
}

// SetAccountBalance gets a reference to the given AccountBalance and assigns it to the AccountBalance field.
func (o *Balance) SetAccountBalance(v AccountBalance) {
	o.AccountBalance = &v
}

// GetCardBalance returns the CardBalance field value if set, zero value otherwise.
func (o *Balance) GetCardBalance() CardBalance {
	if o == nil || IsNil(o.CardBalance) {
		var ret CardBalance
		return ret
	}
	return *o.CardBalance
}

// GetCardBalanceOk returns a tuple with the CardBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Balance) GetCardBalanceOk() (*CardBalance, bool) {
	if o == nil || IsNil(o.CardBalance) {
		return nil, false
	}
	return o.CardBalance, true
}

// HasCardBalance returns a boolean if a field has been set.
func (o *Balance) HasCardBalance() bool {
	if o != nil && !IsNil(o.CardBalance) {
		return true
	}

	return false
}

// SetCardBalance gets a reference to the given CardBalance and assigns it to the CardBalance field.
func (o *Balance) SetCardBalance(v CardBalance) {
	o.CardBalance = &v
}

// GetDepotAggregation returns the DepotAggregation field value if set, zero value otherwise.
func (o *Balance) GetDepotAggregation() DepotAggregation {
	if o == nil || IsNil(o.DepotAggregation) {
		var ret DepotAggregation
		return ret
	}
	return *o.DepotAggregation
}

// GetDepotAggregationOk returns a tuple with the DepotAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Balance) GetDepotAggregationOk() (*DepotAggregation, bool) {
	if o == nil || IsNil(o.DepotAggregation) {
		return nil, false
	}
	return o.DepotAggregation, true
}

// HasDepotAggregation returns a boolean if a field has been set.
func (o *Balance) HasDepotAggregation() bool {
	if o != nil && !IsNil(o.DepotAggregation) {
		return true
	}

	return false
}

// SetDepotAggregation gets a reference to the given DepotAggregation and assigns it to the DepotAggregation field.
func (o *Balance) SetDepotAggregation(v DepotAggregation) {
	o.DepotAggregation = &v
}

// GetFixedTermSavings returns the FixedTermSavings field value if set, zero value otherwise.
func (o *Balance) GetFixedTermSavings() FixedTermSavings {
	if o == nil || IsNil(o.FixedTermSavings) {
		var ret FixedTermSavings
		return ret
	}
	return *o.FixedTermSavings
}

// GetFixedTermSavingsOk returns a tuple with the FixedTermSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Balance) GetFixedTermSavingsOk() (*FixedTermSavings, bool) {
	if o == nil || IsNil(o.FixedTermSavings) {
		return nil, false
	}
	return o.FixedTermSavings, true
}

// HasFixedTermSavings returns a boolean if a field has been set.
func (o *Balance) HasFixedTermSavings() bool {
	if o != nil && !IsNil(o.FixedTermSavings) {
		return true
	}

	return false
}

// SetFixedTermSavings gets a reference to the given FixedTermSavings and assigns it to the FixedTermSavings field.
func (o *Balance) SetFixedTermSavings(v FixedTermSavings) {
	o.FixedTermSavings = &v
}

// GetInstallmentLoanBalance returns the InstallmentLoanBalance field value if set, zero value otherwise.
func (o *Balance) GetInstallmentLoanBalance() InstallmentLoanBalance {
	if o == nil || IsNil(o.InstallmentLoanBalance) {
		var ret InstallmentLoanBalance
		return ret
	}
	return *o.InstallmentLoanBalance
}

// GetInstallmentLoanBalanceOk returns a tuple with the InstallmentLoanBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Balance) GetInstallmentLoanBalanceOk() (*InstallmentLoanBalance, bool) {
	if o == nil || IsNil(o.InstallmentLoanBalance) {
		return nil, false
	}
	return o.InstallmentLoanBalance, true
}

// HasInstallmentLoanBalance returns a boolean if a field has been set.
func (o *Balance) HasInstallmentLoanBalance() bool {
	if o != nil && !IsNil(o.InstallmentLoanBalance) {
		return true
	}

	return false
}

// SetInstallmentLoanBalance gets a reference to the given InstallmentLoanBalance and assigns it to the InstallmentLoanBalance field.
func (o *Balance) SetInstallmentLoanBalance(v InstallmentLoanBalance) {
	o.InstallmentLoanBalance = &v
}

func (o Balance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Balance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountBalance) {
		toSerialize["accountBalance"] = o.AccountBalance
	}
	if !IsNil(o.CardBalance) {
		toSerialize["cardBalance"] = o.CardBalance
	}
	if !IsNil(o.DepotAggregation) {
		toSerialize["depotAggregation"] = o.DepotAggregation
	}
	if !IsNil(o.FixedTermSavings) {
		toSerialize["fixedTermSavings"] = o.FixedTermSavings
	}
	if !IsNil(o.InstallmentLoanBalance) {
		toSerialize["installmentLoanBalance"] = o.InstallmentLoanBalance
	}
	return toSerialize, nil
}

type NullableBalance struct {
	value *Balance
	isSet bool
}

func (v NullableBalance) Get() *Balance {
	return v.value
}

func (v *NullableBalance) Set(val *Balance) {
	v.value = val
	v.isSet = true
}

func (v NullableBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalance(val *Balance) *NullableBalance {
	return &NullableBalance{value: val, isSet: true}
}

func (v NullableBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


