/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the VisaCardImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisaCardImage{}

// VisaCardImage struct for VisaCardImage
type VisaCardImage struct {
	// Visa card image ID to be used in the application
	VisaCardImageId *string `json:"visaCardImageId,omitempty"`
	// Description of the image
	ImageDescription *string `json:"imageDescription,omitempty"`
	// Base filename for the files representing the image. The name has to be extended with a postfix indicating the resolution and file type, e.g. -1x.jpg. The resulting filename can be used to retrieve the image from the comdirect CMS
	ImageBaseFilename *string `json:"imageBaseFilename,omitempty"`
}

// NewVisaCardImage instantiates a new VisaCardImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisaCardImage() *VisaCardImage {
	this := VisaCardImage{}
	return &this
}

// NewVisaCardImageWithDefaults instantiates a new VisaCardImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisaCardImageWithDefaults() *VisaCardImage {
	this := VisaCardImage{}
	return &this
}

// GetVisaCardImageId returns the VisaCardImageId field value if set, zero value otherwise.
func (o *VisaCardImage) GetVisaCardImageId() string {
	if o == nil || IsNil(o.VisaCardImageId) {
		var ret string
		return ret
	}
	return *o.VisaCardImageId
}

// GetVisaCardImageIdOk returns a tuple with the VisaCardImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisaCardImage) GetVisaCardImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.VisaCardImageId) {
		return nil, false
	}
	return o.VisaCardImageId, true
}

// HasVisaCardImageId returns a boolean if a field has been set.
func (o *VisaCardImage) HasVisaCardImageId() bool {
	if o != nil && !IsNil(o.VisaCardImageId) {
		return true
	}

	return false
}

// SetVisaCardImageId gets a reference to the given string and assigns it to the VisaCardImageId field.
func (o *VisaCardImage) SetVisaCardImageId(v string) {
	o.VisaCardImageId = &v
}

// GetImageDescription returns the ImageDescription field value if set, zero value otherwise.
func (o *VisaCardImage) GetImageDescription() string {
	if o == nil || IsNil(o.ImageDescription) {
		var ret string
		return ret
	}
	return *o.ImageDescription
}

// GetImageDescriptionOk returns a tuple with the ImageDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisaCardImage) GetImageDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ImageDescription) {
		return nil, false
	}
	return o.ImageDescription, true
}

// HasImageDescription returns a boolean if a field has been set.
func (o *VisaCardImage) HasImageDescription() bool {
	if o != nil && !IsNil(o.ImageDescription) {
		return true
	}

	return false
}

// SetImageDescription gets a reference to the given string and assigns it to the ImageDescription field.
func (o *VisaCardImage) SetImageDescription(v string) {
	o.ImageDescription = &v
}

// GetImageBaseFilename returns the ImageBaseFilename field value if set, zero value otherwise.
func (o *VisaCardImage) GetImageBaseFilename() string {
	if o == nil || IsNil(o.ImageBaseFilename) {
		var ret string
		return ret
	}
	return *o.ImageBaseFilename
}

// GetImageBaseFilenameOk returns a tuple with the ImageBaseFilename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisaCardImage) GetImageBaseFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageBaseFilename) {
		return nil, false
	}
	return o.ImageBaseFilename, true
}

// HasImageBaseFilename returns a boolean if a field has been set.
func (o *VisaCardImage) HasImageBaseFilename() bool {
	if o != nil && !IsNil(o.ImageBaseFilename) {
		return true
	}

	return false
}

// SetImageBaseFilename gets a reference to the given string and assigns it to the ImageBaseFilename field.
func (o *VisaCardImage) SetImageBaseFilename(v string) {
	o.ImageBaseFilename = &v
}

func (o VisaCardImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisaCardImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VisaCardImageId) {
		toSerialize["visaCardImageId"] = o.VisaCardImageId
	}
	if !IsNil(o.ImageDescription) {
		toSerialize["imageDescription"] = o.ImageDescription
	}
	if !IsNil(o.ImageBaseFilename) {
		toSerialize["imageBaseFilename"] = o.ImageBaseFilename
	}
	return toSerialize, nil
}

type NullableVisaCardImage struct {
	value *VisaCardImage
	isSet bool
}

func (v NullableVisaCardImage) Get() *VisaCardImage {
	return v.value
}

func (v *NullableVisaCardImage) Set(val *VisaCardImage) {
	v.value = val
	v.isSet = true
}

func (v NullableVisaCardImage) IsSet() bool {
	return v.isSet
}

func (v *NullableVisaCardImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisaCardImage(val *VisaCardImage) *NullableVisaCardImage {
	return &NullableVisaCardImage{value: val, isSet: true}
}

func (v NullableVisaCardImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisaCardImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


