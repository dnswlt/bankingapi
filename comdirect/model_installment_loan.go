/*
comdirect REST API

Please have a look at the interfaces of comdirect REST API below. Note: Currently it is not possible to request an access token via swagger UI tools because of comdirect's proprietary authorization flow. The shown error message is due to that circumstance.

API version: 20.04
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comdirect

import (
	"encoding/json"
)

// checks if the InstallmentLoan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallmentLoan{}

// InstallmentLoan Master data of an installment loan
type InstallmentLoan struct {
	// Installment loan identifier (UUID).
	InstallmentLoanId *string `json:"installmentLoanId,omitempty"`
	// SWK number of the installment loan.
	ProductDisplayId *string `json:"productDisplayId,omitempty"`
	CreditAmount *AmountValue `json:"creditAmount,omitempty"`
	NetCreditAmount *AmountValue `json:"netCreditAmount,omitempty"`
	PaidOutAmount *AmountValue `json:"paidOutAmount,omitempty"`
	InstallmentAmount *AmountValue `json:"installmentAmount,omitempty"`
	// Runtime of the installment loan in months.
	ContractPeriodInMonths *int32 `json:"contractPeriodInMonths,omitempty"`
	// Effective interest rate.
	EffectiveInterest *string `json:"effectiveInterest,omitempty"`
	// Nominal interest rate.
	NominalInterest *string `json:"nominalInterest,omitempty"`
	// Date of conclusion of the installment loan.
	ContractConclusionDate *string `json:"contractConclusionDate,omitempty"`
}

// NewInstallmentLoan instantiates a new InstallmentLoan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentLoan() *InstallmentLoan {
	this := InstallmentLoan{}
	return &this
}

// NewInstallmentLoanWithDefaults instantiates a new InstallmentLoan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentLoanWithDefaults() *InstallmentLoan {
	this := InstallmentLoan{}
	return &this
}

// GetInstallmentLoanId returns the InstallmentLoanId field value if set, zero value otherwise.
func (o *InstallmentLoan) GetInstallmentLoanId() string {
	if o == nil || IsNil(o.InstallmentLoanId) {
		var ret string
		return ret
	}
	return *o.InstallmentLoanId
}

// GetInstallmentLoanIdOk returns a tuple with the InstallmentLoanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetInstallmentLoanIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstallmentLoanId) {
		return nil, false
	}
	return o.InstallmentLoanId, true
}

// HasInstallmentLoanId returns a boolean if a field has been set.
func (o *InstallmentLoan) HasInstallmentLoanId() bool {
	if o != nil && !IsNil(o.InstallmentLoanId) {
		return true
	}

	return false
}

// SetInstallmentLoanId gets a reference to the given string and assigns it to the InstallmentLoanId field.
func (o *InstallmentLoan) SetInstallmentLoanId(v string) {
	o.InstallmentLoanId = &v
}

// GetProductDisplayId returns the ProductDisplayId field value if set, zero value otherwise.
func (o *InstallmentLoan) GetProductDisplayId() string {
	if o == nil || IsNil(o.ProductDisplayId) {
		var ret string
		return ret
	}
	return *o.ProductDisplayId
}

// GetProductDisplayIdOk returns a tuple with the ProductDisplayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetProductDisplayIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductDisplayId) {
		return nil, false
	}
	return o.ProductDisplayId, true
}

// HasProductDisplayId returns a boolean if a field has been set.
func (o *InstallmentLoan) HasProductDisplayId() bool {
	if o != nil && !IsNil(o.ProductDisplayId) {
		return true
	}

	return false
}

// SetProductDisplayId gets a reference to the given string and assigns it to the ProductDisplayId field.
func (o *InstallmentLoan) SetProductDisplayId(v string) {
	o.ProductDisplayId = &v
}

// GetCreditAmount returns the CreditAmount field value if set, zero value otherwise.
func (o *InstallmentLoan) GetCreditAmount() AmountValue {
	if o == nil || IsNil(o.CreditAmount) {
		var ret AmountValue
		return ret
	}
	return *o.CreditAmount
}

// GetCreditAmountOk returns a tuple with the CreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetCreditAmountOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.CreditAmount) {
		return nil, false
	}
	return o.CreditAmount, true
}

// HasCreditAmount returns a boolean if a field has been set.
func (o *InstallmentLoan) HasCreditAmount() bool {
	if o != nil && !IsNil(o.CreditAmount) {
		return true
	}

	return false
}

// SetCreditAmount gets a reference to the given AmountValue and assigns it to the CreditAmount field.
func (o *InstallmentLoan) SetCreditAmount(v AmountValue) {
	o.CreditAmount = &v
}

// GetNetCreditAmount returns the NetCreditAmount field value if set, zero value otherwise.
func (o *InstallmentLoan) GetNetCreditAmount() AmountValue {
	if o == nil || IsNil(o.NetCreditAmount) {
		var ret AmountValue
		return ret
	}
	return *o.NetCreditAmount
}

// GetNetCreditAmountOk returns a tuple with the NetCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetNetCreditAmountOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.NetCreditAmount) {
		return nil, false
	}
	return o.NetCreditAmount, true
}

// HasNetCreditAmount returns a boolean if a field has been set.
func (o *InstallmentLoan) HasNetCreditAmount() bool {
	if o != nil && !IsNil(o.NetCreditAmount) {
		return true
	}

	return false
}

// SetNetCreditAmount gets a reference to the given AmountValue and assigns it to the NetCreditAmount field.
func (o *InstallmentLoan) SetNetCreditAmount(v AmountValue) {
	o.NetCreditAmount = &v
}

// GetPaidOutAmount returns the PaidOutAmount field value if set, zero value otherwise.
func (o *InstallmentLoan) GetPaidOutAmount() AmountValue {
	if o == nil || IsNil(o.PaidOutAmount) {
		var ret AmountValue
		return ret
	}
	return *o.PaidOutAmount
}

// GetPaidOutAmountOk returns a tuple with the PaidOutAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetPaidOutAmountOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.PaidOutAmount) {
		return nil, false
	}
	return o.PaidOutAmount, true
}

// HasPaidOutAmount returns a boolean if a field has been set.
func (o *InstallmentLoan) HasPaidOutAmount() bool {
	if o != nil && !IsNil(o.PaidOutAmount) {
		return true
	}

	return false
}

// SetPaidOutAmount gets a reference to the given AmountValue and assigns it to the PaidOutAmount field.
func (o *InstallmentLoan) SetPaidOutAmount(v AmountValue) {
	o.PaidOutAmount = &v
}

// GetInstallmentAmount returns the InstallmentAmount field value if set, zero value otherwise.
func (o *InstallmentLoan) GetInstallmentAmount() AmountValue {
	if o == nil || IsNil(o.InstallmentAmount) {
		var ret AmountValue
		return ret
	}
	return *o.InstallmentAmount
}

// GetInstallmentAmountOk returns a tuple with the InstallmentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetInstallmentAmountOk() (*AmountValue, bool) {
	if o == nil || IsNil(o.InstallmentAmount) {
		return nil, false
	}
	return o.InstallmentAmount, true
}

// HasInstallmentAmount returns a boolean if a field has been set.
func (o *InstallmentLoan) HasInstallmentAmount() bool {
	if o != nil && !IsNil(o.InstallmentAmount) {
		return true
	}

	return false
}

// SetInstallmentAmount gets a reference to the given AmountValue and assigns it to the InstallmentAmount field.
func (o *InstallmentLoan) SetInstallmentAmount(v AmountValue) {
	o.InstallmentAmount = &v
}

// GetContractPeriodInMonths returns the ContractPeriodInMonths field value if set, zero value otherwise.
func (o *InstallmentLoan) GetContractPeriodInMonths() int32 {
	if o == nil || IsNil(o.ContractPeriodInMonths) {
		var ret int32
		return ret
	}
	return *o.ContractPeriodInMonths
}

// GetContractPeriodInMonthsOk returns a tuple with the ContractPeriodInMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetContractPeriodInMonthsOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractPeriodInMonths) {
		return nil, false
	}
	return o.ContractPeriodInMonths, true
}

// HasContractPeriodInMonths returns a boolean if a field has been set.
func (o *InstallmentLoan) HasContractPeriodInMonths() bool {
	if o != nil && !IsNil(o.ContractPeriodInMonths) {
		return true
	}

	return false
}

// SetContractPeriodInMonths gets a reference to the given int32 and assigns it to the ContractPeriodInMonths field.
func (o *InstallmentLoan) SetContractPeriodInMonths(v int32) {
	o.ContractPeriodInMonths = &v
}

// GetEffectiveInterest returns the EffectiveInterest field value if set, zero value otherwise.
func (o *InstallmentLoan) GetEffectiveInterest() string {
	if o == nil || IsNil(o.EffectiveInterest) {
		var ret string
		return ret
	}
	return *o.EffectiveInterest
}

// GetEffectiveInterestOk returns a tuple with the EffectiveInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetEffectiveInterestOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveInterest) {
		return nil, false
	}
	return o.EffectiveInterest, true
}

// HasEffectiveInterest returns a boolean if a field has been set.
func (o *InstallmentLoan) HasEffectiveInterest() bool {
	if o != nil && !IsNil(o.EffectiveInterest) {
		return true
	}

	return false
}

// SetEffectiveInterest gets a reference to the given string and assigns it to the EffectiveInterest field.
func (o *InstallmentLoan) SetEffectiveInterest(v string) {
	o.EffectiveInterest = &v
}

// GetNominalInterest returns the NominalInterest field value if set, zero value otherwise.
func (o *InstallmentLoan) GetNominalInterest() string {
	if o == nil || IsNil(o.NominalInterest) {
		var ret string
		return ret
	}
	return *o.NominalInterest
}

// GetNominalInterestOk returns a tuple with the NominalInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetNominalInterestOk() (*string, bool) {
	if o == nil || IsNil(o.NominalInterest) {
		return nil, false
	}
	return o.NominalInterest, true
}

// HasNominalInterest returns a boolean if a field has been set.
func (o *InstallmentLoan) HasNominalInterest() bool {
	if o != nil && !IsNil(o.NominalInterest) {
		return true
	}

	return false
}

// SetNominalInterest gets a reference to the given string and assigns it to the NominalInterest field.
func (o *InstallmentLoan) SetNominalInterest(v string) {
	o.NominalInterest = &v
}

// GetContractConclusionDate returns the ContractConclusionDate field value if set, zero value otherwise.
func (o *InstallmentLoan) GetContractConclusionDate() string {
	if o == nil || IsNil(o.ContractConclusionDate) {
		var ret string
		return ret
	}
	return *o.ContractConclusionDate
}

// GetContractConclusionDateOk returns a tuple with the ContractConclusionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstallmentLoan) GetContractConclusionDateOk() (*string, bool) {
	if o == nil || IsNil(o.ContractConclusionDate) {
		return nil, false
	}
	return o.ContractConclusionDate, true
}

// HasContractConclusionDate returns a boolean if a field has been set.
func (o *InstallmentLoan) HasContractConclusionDate() bool {
	if o != nil && !IsNil(o.ContractConclusionDate) {
		return true
	}

	return false
}

// SetContractConclusionDate gets a reference to the given string and assigns it to the ContractConclusionDate field.
func (o *InstallmentLoan) SetContractConclusionDate(v string) {
	o.ContractConclusionDate = &v
}

func (o InstallmentLoan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallmentLoan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallmentLoanId) {
		toSerialize["installmentLoanId"] = o.InstallmentLoanId
	}
	if !IsNil(o.ProductDisplayId) {
		toSerialize["productDisplayId"] = o.ProductDisplayId
	}
	if !IsNil(o.CreditAmount) {
		toSerialize["creditAmount"] = o.CreditAmount
	}
	if !IsNil(o.NetCreditAmount) {
		toSerialize["netCreditAmount"] = o.NetCreditAmount
	}
	if !IsNil(o.PaidOutAmount) {
		toSerialize["paidOutAmount"] = o.PaidOutAmount
	}
	if !IsNil(o.InstallmentAmount) {
		toSerialize["installmentAmount"] = o.InstallmentAmount
	}
	if !IsNil(o.ContractPeriodInMonths) {
		toSerialize["contractPeriodInMonths"] = o.ContractPeriodInMonths
	}
	if !IsNil(o.EffectiveInterest) {
		toSerialize["effectiveInterest"] = o.EffectiveInterest
	}
	if !IsNil(o.NominalInterest) {
		toSerialize["nominalInterest"] = o.NominalInterest
	}
	if !IsNil(o.ContractConclusionDate) {
		toSerialize["contractConclusionDate"] = o.ContractConclusionDate
	}
	return toSerialize, nil
}

type NullableInstallmentLoan struct {
	value *InstallmentLoan
	isSet bool
}

func (v NullableInstallmentLoan) Get() *InstallmentLoan {
	return v.value
}

func (v *NullableInstallmentLoan) Set(val *InstallmentLoan) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentLoan) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentLoan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentLoan(val *InstallmentLoan) *NullableInstallmentLoan {
	return &NullableInstallmentLoan{value: val, isSet: true}
}

func (v NullableInstallmentLoan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentLoan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


